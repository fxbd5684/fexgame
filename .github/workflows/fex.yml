name: 构建并发布游戏

on: push

jobs:
  copy-files-to-vm:
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v3

  build-on-linux:
    runs-on: ubuntu-latest
    needs: copy-files-to-vm
    steps:
      - name: 检出代码
        uses: actions/checkout@v3
      - name: 安装PyInstaller
        run: |
          pip3 install pyinstaller
      - name: 编译Linux版本
        run: |
          pyinstaller -D --clean --distpath dist/linux/ main.py
      - name: 上传Linux构建工件
        uses: actions/upload-artifact@v3
        with:
          name: linux-build
          path: dist/linux/

  build-on-windows:
    runs-on: windows-latest
    needs: copy-files-to-vm
    steps:
      - name: 检出代码
        uses: actions/checkout@v3
      - name: 安装PyInstaller
        run: |
          pip install pyinstaller
      - name: 编译Windows版本
        run: |
          pyinstaller -D --clean --distpath dist\windows\ main.py
      - name: 上传Windows构建工件
        uses: actions/upload-artifact@v3
        with:
          name: windows-build
          path: dist\windows\

  publish-release:
    runs-on: ubuntu-latest
    needs: [build-on-linux, build-on-windows]
    steps:

      - name: 创建 Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_name: 新版本 ${{ github.ref }}
          tag_name: ${{ github.sha }}
          draft: false
          prerelease: false

      - name: 下载Linux构建工件
        uses: actions/download-artifact@v3
        with:
          name: linux-build
      - name: 上传Linux版本
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./linux-build
          asset_name: game-linux.zip
          asset_content_type: application/zip
      - name: 下载Windows构建工件
        uses: actions/download-artifact@v3
        with:
          name: windows-build
      - name: 上传Windows版本
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows-build
          asset_name: game-windows.zip
          asset_content_type: application/zip
